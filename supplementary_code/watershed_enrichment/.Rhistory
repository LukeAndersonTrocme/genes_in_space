geom_sf(data=political_processed %>% filter(ctry_en %in% c("Canada"), !juri_en %in% c("Quebec")), fill = "gray95", color = NA) +
geom_sf(data=political_processed %>% filter(!ctry_en %in% c("Canada","Ocean")), fill = "gray95", color = NA)+
geom_sf(data=wts_processed, fill = NA, color = "black", size = 0.15) +
geom_sf(data = wts_bound, fill = alpha("black",0.2), color = "royalblue1", size = 1) +
geom_sf(data = simplified_water_area, size = 0.15, color = "aliceblue", fill = "aliceblue") +
stat_density2d(data = ancestor_range2,
aes(Lon, Lat, alpha=..level.., fill=..level..),
size=2, bins=7, n = 500, geom="polygon") +
geom_density2d(data = ancestor_range2, aes(Lon, Lat),
colour="black", bins=7, n = 500, size = 0.3, linetype = 3) +
#geom_point(data = ancestor_range, aes(Lon, Lat), size = 0.01, color = "grey40") +
geom_point(data = ind_loc, aes(Lon1, Lat1), size = 4, color = "royalblue1") +
scale_alpha(range = c(0.00, 0.5), guide = FALSE) +
scale_fill_gradient(low = "white", high = "royalblue1") +
guides(alpha="none", fill = "none") +
coord_sf(xlim = c(x1,x2),
ylim = c(y1,y2)) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_blank(),
panel.grid = element_blank(),
legend.position="none")+
ggspatial::annotation_scale(location = "br", width_hint = 0.2) +
ggspatial::annotation_north_arrow(location = "br", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering)
}
#top_contributors %>% filter(area == "PC1") %>%
#  arrange(-area_contribution) %>%
#  distinct(ind) %>%
#  head(1) %>% pull(ind) %>%
#  range_dispersal(.) %>%
#  ggsave(file = paste0(figurePath,"regional_histories_p1_test.jpg"))
area_lineage_table <- tibble()
for(area in unique(locations$cline)){
if(is.na(area)){next}
fn <- paste0("~/Documents/Genizon/Data/lineage_tables/lineage_table_",area,".csv")
if(!file.exists(fn)){next}
area_lineage_table <-
pedigree_full %>%                # entire genealogy from BALSAC
inner_join(data.table::fread(fn)) %>%
left_join(locations, by = "lieum") %>%
mutate(area = area) %>%
dplyr::select(ind, father, mother, datem, generation, lieum, lieump, t, Lon, Lat,
realized_kinship, expected_contribution, area) %>%
bind_rows(area_lineage_table)
}
all_lineage_tables <- data.table::fread("~/Documents/Genizon/Data/lineage_tables/all_town_lineage_tables.txt")
probands_per_area <-
inner_join(pedigree_full,locations) %>%
filter(!ind %in% father,        # not fathers
!ind %in% mother,        # or mothers
!is.na(lieum),           # who married
!is.na(datem),           # who married
!is.na(cline),
datemp > 1900) %>%       # hard cap at 1900
group_by(cline) %>%
tally(name = "n_probands") %>%
ungroup() %>%
dplyr::rename(area = cline)
area_summary_stats <-
area_lineage_table %>%
filter(!is.na(Lon),
generation > 0) %>%
group_by(Lon, Lat, t, area) %>%
dplyr::summarise(area_realized_kinship = sum(realized_kinship, na.rm = T),
area_contribution = sum(expected_contribution, na.rm = T),
kinship_weighted_date = weighted.mean(datem, w = realized_kinship, na.rm = T),
contribution_weighted_date = weighted.mean(datem, w = expected_contribution, na.rm = T)) %>%     ### WEIGHT CHANGE
ungroup() %>%
left_join(probands_per_area) %>%
mutate(relative_kinship_realized = area_realized_kinship / n_probands^2)
total_kinship_per_region <-
area_summary_stats %>%
group_by(area) %>%
dplyr::summarise(total_kinship = sum(area_realized_kinship))
number_of_town_probands <-
pedigree_full %>%
filter(!ind %in% father,        # not fathers
!ind %in% mother,        # or mothers
!is.na(lieum),           # who married
!is.na(datem),           # who married
datemp > 1900) %>%          # hard cap at 1900
group_by(lieum) %>% tally() %>%
dplyr::rename(pb_town = lieum)
couple_ids <- pedigree_full %>% distinct(mother, father)
mothers <-
area_lineage_table %>%
dplyr::select(ind, expected_contribution, area) %>%
dplyr::rename(mother = ind, m_cont = expected_contribution) %>%
inner_join(couple_ids)
fathers <-
area_lineage_table %>%
dplyr::select(ind, expected_contribution, area) %>%
dplyr::rename(father = ind, f_cont = expected_contribution) %>%
inner_join(couple_ids)
couples <-
full_join(mothers, fathers) %>%
# choose one partner per couple
mutate(ind = ifelse(m_cont > f_cont, mother, father)) %>%
dplyr::select(ind, area) %>%
left_join(area_lineage_table)
top_contributors <-
couples %>%
filter(!is.na(Lon)) %>%
group_by(area) %>%
top_n(n = 10, wt = realized_kinship) %>%
#slice(10) %>%
dplyr::rename(area_contribution = expected_contribution,
t1 = t, datem1 = datem, Lon1 = Lon, Lat1 = Lat) %>%
dplyr::select(ind, area_contribution, t1, datem1, Lon1, Lat1) %>%
inner_join(all_lineage_tables) %>%
left_join(number_of_town_probands) %>%
mutate(percent_contribution = expected_contribution / n * 10000) %>%
dplyr::rename(lieum = pb_town) %>%
left_join(locations) %>% arrange(area)
total_kinship_per_top10<-
couples %>%
filter(!is.na(Lon)) %>%
group_by(area) %>%
top_n(n = 10, wt = realized_kinship) %>% slice(1:10) %>%
dplyr::summarise(total_kinship_10 = sum(realized_kinship))
total_kinship_per_area<-
area_lineage_table %>%
group_by(area) %>%
dplyr::summarise(total_kinship = sum(realized_kinship))
locs_sf <- st_as_sf(area_summary_stats, coords = c("Lon", "Lat"), crs = 4269)
locations_in_area <- filter(locations, !is.na(cline)) %>% mutate(area = cline)
main_points <- area_summary_stats %>% group_by(area) %>% top_frac(wt = area_contribution, n = 0.01)# %>% bind_rows(locations_in_area)
size_bins <-
tibble(sizes = c(1e-10, 1e-9, 1e-8, 1e-7, 1e-6, 1e-5,1e-4,1e-3, 0.01,0.05,0.1,0.5,
1,5,10,50,100,500, 1000, 10000, 100000, 1000000, 5000000)) %>%
filter(sizes <= max(area_summary_stats$relative_kinship_realized)) %>%
arrange(-sizes) %>% head(4)
region_extent <- get_region_extent(main_points, area)
labelled_towns <-
area_summary_stats %>%
group_by(area) %>%
top_n(wt = area_contribution, n = 7) %>%
mutate(title = gsub("''","'",t)) %>%
full_join(area_summary_stats) %>%
replace_na(list(title = "")) %>%
st_as_sf(coords = c("Lon", "Lat"),crs = 4269)
cvx_lab <-
tibble(Lon = -70.670000, Lat = 47.533333,
label = "Charlevoix\nAstrobleme") %>%
st_as_sf(coords = c("Lon", "Lat"),crs = 4269)
#full_join(total_kinship_per_area, total_kinship_per_top10) %>% mutate(fraction = total_kinship_10/ total_kinship)
# now add the title
t1 <- ggdraw() + draw_label("Saguenay (PC1)",fontface = 'bold', hjust = 0.5, size = 30) + theme(plot.margin = margin(0,0,0,0))
t2 <- ggdraw() + draw_label("Bas-Saint-Laurent (PC2)",fontface = 'bold', hjust = 0.5, size = 30) + theme(plot.margin = margin(0,0,0,0))
t3 <- ggdraw() + draw_label("Beauce (PC3)",fontface = 'bold', hjust = 0.5, size = 30) + theme(plot.margin = margin(0,0,0,0))
title <- plot_grid(t1,t2,t3,align = 'vh',nrow = 1)
PC1_lab <-
make_cropped_plot("PC1")+
ggrepel::geom_label_repel(
data = filter(labelled_towns, area == "PC1"),
aes(label = title, geometry = geometry),
stat = "sf_coordinates",
size = 7,
min.segment.length = 0,
max.overlaps = Inf,
force = 10,
nudge_x = 0.7,
box.padding = 0.5,
#nudge_y = -0.1,
ylim = c(45,48.7),
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = "white",
alpha = 0.5,
seed = 1234
) +
ggrepel::geom_label_repel(
data = filter(labelled_towns, area == "PC1"),
aes(label = title, geometry = geometry),
stat = "sf_coordinates",
size = 7,
min.segment.length = 0,
max.overlaps = Inf,
force = 10,
nudge_x = 0.7,
box.padding = 0.5,
#nudge_y = -0.1,
ylim = c(45,48.7),
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = NA,
seed = 1234
) + theme(legend.position="none",
axis.text = element_blank(),
axis.ticks = element_blank())
PC2_lab <-
make_cropped_plot("PC2")+
ggrepel::geom_label_repel(
data = filter(labelled_towns, area == "PC2"),
aes(label = title, geometry = geometry),
stat = "sf_coordinates",
size = 7,
min.segment.length = 0,
max.overlaps = Inf,
force = 10,
nudge_x = -0.4,
box.padding = 0.5,
nudge_y = 1,
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = "white",
alpha = 0.5,
seed = 1234
) +
ggrepel::geom_label_repel(
data = filter(labelled_towns, area == "PC2"),
aes(label = title, geometry = geometry),
stat = "sf_coordinates",
size = 7,
min.segment.length = 0,
max.overlaps = Inf,
force = 10,
nudge_x = -0.4,
box.padding = 0.5,
nudge_y = 1,
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = NA,
seed = 1234
) + theme(legend.position="none",
axis.text = element_blank(),
axis.ticks = element_blank())
PC3_lab <-
make_cropped_plot("PC3")+
ggrepel::geom_label_repel(
data = filter(labelled_towns, area == "PC3"),
aes(label = title, geometry = geometry),
stat = "sf_coordinates",
size = 7,
min.segment.length = 0,
max.overlaps = Inf,
force = 10,
nudge_x = -0.75,
box.padding = 0.5,
nudge_y = -0.1,
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = "white",
alpha = 0.5,
seed = 1234
) +
ggrepel::geom_label_repel(
data = filter(labelled_towns, area == "PC3"),
aes(label = title, geometry = geometry),
stat = "sf_coordinates",
size = 7,
min.segment.length = 0,
max.overlaps = Inf,
force = 10,
nudge_x = -0.75,
box.padding = 0.5,
nudge_y = -0.1,
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = NA,
seed = 1234
) + theme(legend.position="none",
axis.text = element_blank(),
axis.ticks = element_blank())
# arrange the three plots in a single row
prow <- plot_grid(
PC1_lab,
PC2_lab,
PC3_lab,
align = 'vh',
labels = c("A", "B", "C"),
hjust = -1,
nrow = 1,
label_size = 35
)
# extract a legend that is laid out horizontally
legend_b <- get_legend(
PC1_lab +
guides(size = guide_legend(ncol = 1)) +
theme(legend.position = "right",
legend.text = element_text(size=30),
legend.title = element_text(size=30),
legend.key.height = unit(1.5, "cm"),
legend.key = element_rect(fill = "transparent",
colour = "transparent"))
)
PC1_lab_a <-
make_cropped_arrow_plot("PC1")+
theme(legend.position="none",
axis.text = element_blank(),
axis.ticks = element_blank()) +
geom_polygon(data = astrobleme_circle, aes(lon, lat, group = ID), color = "black", alpha = 0, linetype = 2, size = 2) +
geom_point(aes(x = -70.300000, y = 47.533333), shape = 3, size = 15) +
geom_point(aes(x = -70.300000, y = 47.533333), shape = 23, size = 7, fill = "white") +
ggrepel::geom_label_repel(data=cvx_lab, aes(label = label, geometry = geometry),
stat = "sf_coordinates",
size = 7,
xlim = c(-73,-71.7),
ylim = c(46,47.3),
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = "white",
alpha = 0.5,
seed = 1234) +
ggrepel::geom_label_repel(data=cvx_lab, aes(label = label, geometry = geometry),
stat = "sf_coordinates",
size = 7,
xlim = c(-73,-71.7),
ylim = c(46,47.3),
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = NA,
seed = 1234)
PC2_lab_a <-
make_cropped_arrow_plot("PC2")+
theme(legend.position="none",
axis.text = element_blank(),
axis.ticks = element_blank())
PC3_lab_a <-
make_cropped_arrow_plot("PC3")+
theme(legend.position="none",
axis.text = element_blank(),
axis.ticks = element_blank())
# arrange the three plots in a single row
prow_a <- plot_grid(
PC1_lab_a,
PC2_lab_a,
PC3_lab_a,
align = 'vh',
labels = c("D", "E", "F"),
hjust = -1,
nrow = 1,
label_size = 35
)
p1 <-
top_contributors %>% filter(area == "PC1") %>%
arrange(-area_contribution) %>%
distinct(ind) %>%
head(1) %>% pull(ind) %>%
range_dispersal(.)
p2 <-
top_contributors %>% filter(area == "PC2") %>%
arrange(-area_contribution) %>%
distinct(ind) %>%
head(1) %>% pull(ind) %>%
range_dispersal(.)
p3 <- top_contributors %>% filter(area == "PC3") %>%
arrange(-area_contribution) %>%
distinct(ind) %>%
head(1) %>% pull(ind) %>%
range_dispersal(.)
range_plot <- plot_grid(
p1,p2,p3,
align = 'vh',
labels = c("G", "H", "I"),
hjust = -1,
nrow = 1,
label_size = 35
)
complete2 <-  plot_grid(plot_grid(
title, prow, prow_a, range_plot,
ncol = 1, rel_heights = c(.1,1,1,1)),
plot_grid(legend_b,NULL, ncol = 1, rel_heights = c(1,0.4)),
nrow = 1, rel_widths = c(1, .15))
ggsave(complete2, file = paste0(figurePath,"regional_histories_range_percent_contribution_june2022_alt_blue.jpg"), height = 25, width = 27, dpi = 500, bg = "white")
PC1_lab_a <-
make_cropped_arrow_plot("PC1")+
theme(legend.position="none",
axis.text = element_blank(),
axis.ticks = element_blank()) +
geom_polygon(data = astrobleme_circle, aes(lon, lat, group = ID), color = "black", alpha = 0, linetype = 2, size = 1) +
geom_point(aes(x = -70.300000, y = 47.533333), shape = 3, size = 15) +
geom_point(aes(x = -70.300000, y = 47.533333), shape = 23, size = 7, fill = "white") +
ggrepel::geom_label_repel(data=cvx_lab, aes(label = label, geometry = geometry),
stat = "sf_coordinates",
size = 7,
xlim = c(-73,-71.7),
ylim = c(46,47.3),
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = "white",
alpha = 0.5,
seed = 1234) +
ggrepel::geom_label_repel(data=cvx_lab, aes(label = label, geometry = geometry),
stat = "sf_coordinates",
size = 7,
xlim = c(-73,-71.7),
ylim = c(46,47.3),
segment.linetype = 6,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
segment.size = 0.7,
fill = NA,
seed = 1234)
range_dispersal <-function(x) {
ancestor_range <- filter(top_contributors, ind %in% x) %>%
mutate(lab = paste0(t1," (",datem1,")\n",round(area_contribution, 2)," genomes")) %>%
arrange(-area_contribution)
ancestor_range$lab <- factor(ancestor_range$lab, levels = unique(ancestor_range$lab))
ind_loc <- ancestor_range %>% distinct(Lon1, Lat1, lab)
ancestor_range2 <- with(ancestor_range, ancestor_range[rep(1:nrow(ancestor_range), percent_contribution),])
locations_inside <- filter(locations, cline == unique(ancestor_range$area))
wts_bound <- filter(watershed_boundaries, WSCSSDA %in% unique(locations_inside$WSCSSDA)) %>%
rmapshaper::ms_dissolve()
r <- filter(region_extent, region == unique(ancestor_range$area))
x1 <- r$lon1
x2 <- r$lon2
y1 <- r$lat1
y2 <- r$lat2
ggplot()+
geom_contour_filled(data = m_gplot, aes(x = x, y = y, z = value), bins = 12, alpha = 0.9, color = "NA") +
scale_fill_grey(name = "Elevation (m)", start=0.9, end=0.2) +
guides(fill="none") +
ggnewscale::new_scale("fill") +
geom_sf(data=political_processed %>% filter(ctry_en %in% c("Canada"), !juri_en %in% c("Quebec")), fill = "gray95", color = NA) +
geom_sf(data=political_processed %>% filter(!ctry_en %in% c("Canada","Ocean")), fill = "gray95", color = NA)+
geom_sf(data=wts_processed, fill = NA, color = "black", size = 0.15) +
geom_sf(data = wts_bound, fill = alpha("black",0.2), color = "royalblue1", size = 1) +
geom_sf(data = simplified_water_area, size = 0.15, color = "aliceblue", fill = "aliceblue") +
stat_density2d(data = ancestor_range2,
aes(Lon, Lat, alpha=..level.., fill=..level..),
size=2, bins=7, n = 500, geom="polygon") +
geom_density2d(data = ancestor_range2, aes(Lon, Lat),
colour="black", bins=7, n = 500, size = 0.3, linetype = 3) +
#geom_point(data = ancestor_range, aes(Lon, Lat), size = 0.01, color = "grey40") +
geom_point(data = ind_loc, aes(Lon1, Lat1), size = 4, color = "royalblue1") +
scale_alpha(range = c(0.00, 0.7), guide = FALSE) +
scale_fill_gradient(low = "white", high = "royalblue1") +
guides(alpha="none", fill = "none") +
coord_sf(xlim = c(x1,x2),
ylim = c(y1,y2)) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
strip.text = element_blank(),
panel.grid = element_blank(),
legend.position="none")+
ggspatial::annotation_scale(location = "br", width_hint = 0.2) +
ggspatial::annotation_north_arrow(location = "br", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering)
}
p1 <-
top_contributors %>% filter(area == "PC1") %>%
arrange(-area_contribution) %>%
distinct(ind) %>%
head(1) %>% pull(ind) %>%
range_dispersal(.)
p2 <-
top_contributors %>% filter(area == "PC2") %>%
arrange(-area_contribution) %>%
distinct(ind) %>%
head(1) %>% pull(ind) %>%
range_dispersal(.)
p3 <- top_contributors %>% filter(area == "PC3") %>%
arrange(-area_contribution) %>%
distinct(ind) %>%
head(1) %>% pull(ind) %>%
range_dispersal(.)
range_plot <- plot_grid(
p1,p2,p3,
align = 'vh',
labels = c("G", "H", "I"),
hjust = -1,
nrow = 1,
label_size = 35
)
complete2 <-  plot_grid(plot_grid(
title, prow, prow_a, range_plot,
ncol = 1, rel_heights = c(.1,1,1,1)),
plot_grid(legend_b,NULL, ncol = 1, rel_heights = c(1,0.4)),
nrow = 1, rel_widths = c(1, .15))
ggsave(complete2, file = paste0(figurePath,"regional_histories_range_percent_contribution_june2022_alt_blue.jpg"), height = 25, width = 27, dpi = 500, bg = "white")
pacman::p_load(dplyr, data.table,forcats, ggplot2, cowplot)
setwd("~/Documents/genes_in_space/supplementary_code/watershed_enrichment/")
omega_cross_coalescence
distinct(omega_cross_coalescence$lieum) %>% nrow()
unique(omega_cross_coalescence$lieum) %>% nrow()
unique(omega_cross_coalescence$lieum)
length(unique(omega_cross_coalescence$lieum))
length(unique(omega_migration_rate$lieum))
